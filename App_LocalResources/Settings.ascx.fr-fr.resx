<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmChangeMode.Text" xml:space="preserve">
    <value>Confirmer le changement de mode ! Attention, cela va reinitialiser les liens entre les objets. Vous devrez aller dans Edition Données du Module pour recréer les liaisons entre objet et/ou groupes.</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Paramétrage DevPCI - DDT_Org_Chart</value>
  </data>
  <data name="DefaultImageUrl.Help" xml:space="preserve">
    <value>Vous pouvez spécifier (facultatif) une url pour l'image par defaut. ex : /Portals/0/Images/defaultpict-48x48.png</value>
  </data>
  <data name="DefaultImageUrl.Text" xml:space="preserve">
    <value>Url de l'image par default </value>
  </data>
  <data name="DisableDefaultImage.Help" xml:space="preserve">
    <value>Désactiver l'image par default, masquera l'affichage de l'image par default.</value>
  </data>
  <data name="DisableDefaultImage.Text" xml:space="preserve">
    <value>Désactiver l'image par defaut</value>
  </data>
  <data name="EnableCollapsing.Help" xml:space="preserve">
    <value>Activer pour pouvoir réduire les noeuds</value>
  </data>
  <data name="EnableCollapsing.Text" xml:space="preserve">
    <value>Activer réduction</value>
  </data>
  <data name="EnableDrillDown.Help" xml:space="preserve">
    <value>Activer pour avcoir la fonctionnalité Drill Down (Bug graphique sous DNN6 cause default.css, marche sous DNN7)</value>
  </data>
  <data name="EnableDrillDown.Text" xml:space="preserve">
    <value>Activer Drill Down</value>
  </data>
  <data name="EnableGroupCollapsing.Help" xml:space="preserve">
    <value>Activer la réduction de groupe</value>
  </data>
  <data name="EnableGroupCollapsing.Text" xml:space="preserve">
    <value>Activer la réduction de groupe</value>
  </data>
  <data name="ExpandCollapseAllGroups.Help" xml:space="preserve">
    <value>Agrandir reduire tous les groupes</value>
  </data>
  <data name="ExpandCollapseAllGroups.Text" xml:space="preserve">
    <value>Agrandir reduire tous les groupes</value>
  </data>
  <data name="ExpandCollapseAllNodes.Help" xml:space="preserve">
    <value>Agrandir reduire tous les noeuds</value>
  </data>
  <data name="ExpandCollapseAllNodes.Text" xml:space="preserve">
    <value>Agrandir reduire tous les noeuds</value>
  </data>
  <data name="GroupColumnCount.Help" xml:space="preserve">
    <value>Nombre par defaut de colonnes dans le groupe</value>
  </data>
  <data name="GroupColumnCount.Text" xml:space="preserve">
    <value>Nombre de colonnes dans le groupe</value>
  </data>
  <data name="Intro.Text" xml:space="preserve">
    <value>Attention, il ya deux modes d'utilisation de ce module, simple, ou avec groupe. En changeant de mode, vous devrez relier les données en Edition Données du Module. Mode simple, les éléments sont liés les uns des autres. Avec groupe, les groupes sont liés les uns aux autres et au les éléments sont liés au groupes.</value>
  </data>
  <data name="ItemTitle.Help" xml:space="preserve">
    <value>Titre d'Item (DNN 6.2.4/5/6 uniquement, Ne fonctionne pas sous DNN 7 + pour le moment)</value>
  </data>
  <data name="ItemTitle.Text" xml:space="preserve">
    <value>Titre d'item</value>
  </data>
  <data name="LoadOnDemand.Help" xml:space="preserve">
    <value>Activer LoadOnDemand va activer automatiquement la réduction (collapse)</value>
  </data>
  <data name="LoadOnDemand.Text" xml:space="preserve">
    <value>Activer LoadOnDemand</value>
  </data>
  <data name="Mode.Help" xml:space="preserve">
    <value>Simple, les éléments sont liés les uns des autres. Avec groupe, les groupes sont liés les uns aux autres et les éléments sont liés au groupe. Allez en Edition Données du Module si le mode est changé.</value>
  </data>
  <data name="Mode.Text" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="NodeLabel.Help" xml:space="preserve">
    <value>Titre de groupe (DNN 6.2.4/5/6 uniquement, Ne fonctionne pas sous DNN 7 + pour le moment)</value>
  </data>
  <data name="NodeLabel.Text" xml:space="preserve">
    <value>Titre du groupe</value>
  </data>
  <data name="ReductSize25.Help" xml:space="preserve">
    <value>Reduire la taille de 25%</value>
  </data>
  <data name="ReductSize25.Text" xml:space="preserve">
    <value>Reduire la taille de 25%</value>
  </data>
  <data name="ShowExpandCollapseGroupButton.Help" xml:space="preserve">
    <value>Afficher boutton Etendre/Reduire les groupes</value>
  </data>
  <data name="ShowExpandCollapseGroupButton.Text" xml:space="preserve">
    <value>Afficher boutton Etendre/Reduire les groupes</value>
  </data>
  <data name="ShowExpandCollapseNodeButton.Help" xml:space="preserve">
    <value>Afficher bouton Etendre/Reduire les noeuds</value>
  </data>
  <data name="ShowExpandCollapseNodeButton.Text" xml:space="preserve">
    <value>Afficher bouton Etendre/Reduire les noeuds</value>
  </data>
  <data name="Simple.Text" xml:space="preserve">
    <value>Simple</value>
  </data>
  <data name="Skin.Help" xml:space="preserve">
    <value>Selectionner un skin d'affichage</value>
  </data>
  <data name="Skin.Text" xml:space="preserve">
    <value>Telerik Skin</value>
  </data>
  <data name="WithGroup.Text" xml:space="preserve">
    <value>Avec Groupe</value>
  </data>
</root>